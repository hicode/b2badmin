<?php
$di = Phalcon\DI::getDefault();
$cpa = &$di->controller_params_array;
$calendarpluginarrparams = $cpa[\CHCrmCParams::$keyarrFullCalendar];
$cpasettings = $cpa['settings'];
?>
//<script>
    // DLS20161111
    $.fn.datepicker.dates['el'] = {
        days: ["Κυριακή", "Δευτέρα", "Τρίτη", "Τετάρτη", "Πέμπτη", "Παρασκευή", "Σάββατο", "Κυριακή"],
        daysShort: ["Κυρ", "Δευ", "Τρι", "Τετ", "Πεμ", "Παρ", "Σαβ", "Κυρ"],
        daysMin: ["Κυ", "Δε", "Τρ", "Τε", "Πε", "Πα", "Σα", "Κυ"],
        months: ["Ιανουάριος", "Φεβρουάριος", "Μάρτιος", "Απρίλιος", "Μάιος", "Ιούνιος", "Ιούλιος", "Αύγουστος", "Σεπτέμβριος", "Οκτώβριος", "Νοέμβριος", "Δεκέμβριος"],
        monthsShort: ["Ιαν", "Φεβ", "Μαρ", "Απρ", "Μαι", "Ιουν", "Ιουλ", "Αυγ", "Σεπ", "Οκτ", "Νοε", "Δεκ"],
        today: "Σήμερα"
    };

    var Dl = {
        dtDefs: {
            "format": "dd-mm-yyyy",
            "rtl": App.isRTL(),
            "orientation": "right",
            "autoclose": true,
            "multidate": false,
            "minDate": false
        },
        Gen: {
            formatDate: function (obj, sep, rev) {
                sep = typeof sep == 'undefined' || sep == '' ? '-' : sep;
                rev = rev != true ? false : true;
                if (rev === true) {
                    return {
                        "date": obj.getFullYear() + sep + (obj.getMonth() + 1) + sep + (obj.getDate()),
                        "format": "yyyy" + sep + "mm" + sep + "dd",
                        "data": {
                            "orig": obj,
                            "seperator": sep,
                            "reverse": rev
                        }
                    };
                } else {
                    return {
                        "date": (obj.getDate()) + sep + (obj.getMonth() + 1) + sep + obj.getFullYear(),
                        "format": "dd" + sep + "mm" + sep + "yyyy",
                        "data": {
                            "orig": obj,
                            "seperator": sep,
                            "reverse": rev
                        }
                    };
                }

            },
            generateDates: function (from, to) {
                var dates = [];
                for (var i = new Date(from); i <= new Date(to); i.setDate(i.getDate() + 1)) {
                    dates.push(new Date(i));
                }
                return dates;
            }
        },
        Datepicker: {
            init: function (element, options) {
                options = !$.isEmptyObject(options) ? $.extend({}, Dl.dtDefs, options) : Dl.dtDefs;
                element.datepicker(options);
            },
            initMultiDate: function (element) {
                Dl.Datepicker.remove(element);
                element.datepicker($.extend({}, Dl.dtDefs, {"multidate": true}));
            },
            initSingleDate: function (element) {
                Dl.Datepicker.remove(element);
                element.datepicker(Dl.dtDefs);
            },
            remove: function (element) {
                element.datepicker('remove');
            },
            setDate: function (element, date) {
                element.datepicker('update', date);
            }
        },
        Calendar: {
            defs: {
                form: {},
                resid: '',
                eventid: 0,
                preset: 0,
                presetvals: {}
            },
            getCreateEventPortletParentContainer: function () {
                return $('#<?php echo \B2b\Models\CoreModels\DlB2bAdminFullCalendar::Get_Create_Event_Portlet_Parent_ID(); ?>');
            },
            getCreateEventPortletContainer: function () {
                return $('#<?php echo \B2b\Models\CoreModels\DlB2bAdminFullCalendar::Get_Create_Event_Portlet_ID(); ?>');
            },
            // DLE20161012
            showQuickTpls: function (calendar, element, view) {
                if (view.name == 'agendaDay') {
                    $('.event-quick-tpls-md', element).removeClass('hidden');
                }
                if (view.name == 'agendaWeek') {
                    $('.event-quick-tpls-w', element).removeClass('hidden');
                }
            },
            hideQuickTpls: function (calendar, element, view) {
                if (view.name == 'agendaDay') {
                    $('.event-quick-tpls-md', element).addClass('hidden');
                }
                if (view.name == 'agendaWeek') {
                    $('.event-quick-tpls-w', element).addClass('hidden');
                }
            },
            renderEventWidth: function (calendar, element, view) {
                //DL-TODO na to valw apo settings an einai na dwsw custom width
                view.name === 'agendaDay' && $.isEmptyObject(calendar.fullCalendar('getResources')) ? element.css('width', '15%') : '';
            },
            renderQuickTpls: function (calendar, element, view) {
                // Vazw mia grami anamesa sto title kai sto content
                //element.find('.fc-title').css('border-bottom', '1px solid white');
                var html = '<div class="event-quick-tpls-md hidden text-center" style="z-index:100; width: 100%; position: absolute;">' +
                        '<a class="event-qtpls" data-tpl="addmembers" title="Add Person" style="margin:3px;padding:2px;">' +
                        '<i class="fa fa-user-plus" style="color:white;"></i>' +
                        '</a>' +
//                        '<a class="event-qtpls" data-tpl="copy" title="Copy" style="margin:3px;padding:2px;">' +
//                        '<i class="fa fa-copy" style="color:white;"></i>' +
//                        '</a>' +
//                        '<a class="event-qtpls" data-tpl="more" title="More" style="margin:3px;padding:2px;">' +
//                        '<i class="fa fa-ellipsis-h" style="color:white;"></i>' +
//                        '</a>' +
                        '<a class="event-qtpls" data-tpl="delete" title="Delete Event" style="margin:3px;padding:2px;">' +
                        '<span class="glyphicon glyphicon-trash" style="color:white;"></span>' +
                        '</a>' +
                        '</div>' +
                        '<div class="event-quick-tpls-w hidden text-center" style="z-index:100; width: 100%;">' +
//                        '<a class="event-qtpls" data-tpl="more" title="More" style="margin:3px;padding:2px;">' +
//                        '<i class="fa fa-ellipsis-h" style="color:white;"></i>' +
//                        '</a>' +
                        '<a class="event-qtpls" data-tpl="addmembers" title="Add Person" style="margin:3px;padding:2px;">' +
                        '<i class="fa fa-user-plus" style="color:white;"></i>' +
                        '</a>' +
                        '<a class="event-qtpls" data-tpl="delete" title="Delete Event" style="margin:3px;padding:2px;">' +
                        '<span class="glyphicon glyphicon-trash" style="color:white;"></span>' +
                        '</a>' +
                        '</div>';
                //$('.fc-content', element).children(':first').before(html);
                //$('.fc-bg',element).append(html);
            },
            quickTplsListeners: function (event, element) {
                $('.event-qtpls', element).off('click').on('click', function () {
                    var btn = $(this);
                    if (btn.attr('data-tpl') != 'delete') {
                        console.log(btn);
                        console.log(event);
                    } else {
                        console.log('Go for delete');
                    }
                });
            },
            quickTplsEffect: function (event, element, eff) {
                if (eff === true) {
                    $('.event-qtpls', element).hover(function () {
                        $(this).css("background-color", "lightblue");
                    }, function () {
                        $(this).css("background-color", "");
                    });
                } else {
                    return false;
                }
                $('.event-quick-tpls-md, .event-quick-tpls-w').hover(
                        function () {
                            EVENTCLK = false;
                        },
                        function () {
                            EVENTCLK = true;
                        }
                );
            },
            loadQuickTpl: function (obj) {
                ModalGeneral.load($('#<?php echo \B2b\Models\CoreModels\DlB2bAdminFullCalendar::Get_Create_Event_Modal_Quick_Tpls_ID(); ?>'), '<?php echo MyCustomHelperPages::makePage(CHCrmCConstantsPages::CONST_PAGES_ADMIN_DYNPAGE_HELPERPAGE, array('helperpage' => B2b\Models\CoreModels\DlB2bAdminFullCalendar::Get_Create_Event_Modal_Quick_Tpls_Helper_Page_Name())); ?>' + obj.id + '/' + obj.tpl, function (ModalQuickTpls) {
                    ModalQuickTpls.modal({
                        "width": (parseFloat($(window).width()) * 0.80)
                    });
                });
            },
            addMembers: function () {
                ModalGeneral.load($('#<?php echo \B2b\Models\CoreModels\DlB2bAdminFullCalendar::Get_Create_Event_Modal_Add_Member_ID(); ?>'), '<?php echo MyCustomHelperPages::makePage(CHCrmCConstantsPages::CONST_PAGES_ADMIN_DYNPAGE_HELPERPAGE, array('helperpage' => \B2b\Models\CoreModels\DlB2bAdminFullCalendar::Get_Create_Event_Modal_Add_Members_Helper_Page_Name())); ?>', function (ModalMembers) {
                    ModalMembers.modal({
                        "width": (parseFloat($(window).width()) * 0.80)
                    });

                    runeveryinner();
                    var MyModalInitPage = function () {
                        Form1Click();
                    };
                    var MyModalOnClose = function () {
                        //alert('close');
                        grid.getDataTable().ajax.reload();
                    };
<?php
B2b\Models\CoreModels\PpB2bAdminMetronic454PluginDataTableAjax::Get_myaoColumns(CHCrmCParams::$keyarrDataTableAjax);
?>
                    myaoColumns = <?php echo $cpa[CHCrmCParams::$keyarrDataTableAjax]['myaoColumns']; ?>;
<?php
echo B2b\Models\CoreModels\PpB2bAdminMetronic454PluginDataTableAjax::Get_Js_Function_MyRunForm();
?>
                    //TableAjax.init('datatable_ajax');
                    //UIGeneral.init();
                    MyRunForm();

                });
            },
            addTrainers: function () {},
            getSinglEeventSaveData: function (form) {
                var data = {};
                data['mode'] = 'single';
                data['customers'] = $('input[name="event_participant_members_tags"]', form).tagsinput("items");
                data['trainers'] = $('input[name="event_participant_trainers_tags"]', form).tagsinput("items");
                data[ $('input[name="event_start_date"]', form).attr('data-name') ] = $('input[name="event_start_date"]', form).val();
                data[ $('input[name="event_end_date"]', form).attr('data-name') ] = $('input[name="event_end_date"]', form).val();
                data[ $('input[name="event_start_time"]', form).attr('data-name') ] = $('input[name="event_start_time"]', form).val();
                data[ $('input[name="event_end_time"]', form).attr('data-name') ] = $('input[name="event_end_time"]', form).val();
                data[ $('select[name="event_status"]', form).attr('data-name') ] = $('select[name="event_status"] :selected', form).attr('data-id');
                data[ $('select[name="event_categories"]', form).attr('data-name') ] = $('select[name="event_categories"] :selected', form).attr('data-id');
                data[ $('select[name="event_resource"]', form).attr('data-name') ] = $('select[name="event_resource"] :selected', form).attr('data-id');
                return data;
            },
            saveSingleEvent: function (form) {
                var data = {};
                data['mode'] = 'single';
                data['customers'] = $('input[name="event_participant_members_tags"]', form).tagsinput("items");
                data['trainers'] = $('input[name="event_participant_trainers_tags"]', form).tagsinput("items");
                data[ $('input[name="event_start_date"]', form).attr('data-name') ] = $('input[name="event_start_date"]', form).val();
                data[ $('input[name="event_end_date"]', form).attr('data-name') ] = $('input[name="event_end_date"]', form).val();
                data[ $('input[name="event_start_time"]', form).attr('data-name') ] = $('input[name="event_start_time"]', form).val();
                data[ $('input[name="event_end_time"]', form).attr('data-name') ] = $('input[name="event_end_time"]', form).val();
                data[ $('select[name="event_status"]', form).attr('data-name') ] = $('select[name="event_status"] :selected', form).attr('data-id');
                data[ $('select[name="event_categories"]', form).attr('data-name') ] = $('select[name="event_categories"] :selected', form).attr('data-id');
                data[ $('select[name="event_resource"]', form).attr('data-name') ] = $('select[name="event_resource"] :selected', form).attr('data-id');
                this.save(data, form);
            },
            saveRepeatEvents: function (form) {
                var rData = [];
                $.each($('#repeat-days-preview').dataTable().fnGetNodes(), function (key, value) {
                    if ($(this).attr('data-repeat') == '1') {
                        rData.push($(this).attr('data-date-repeat'));
                    }
                });
                var data = {};
                data['mode'] = 'repeat';
                data['customers'] = $('input[name="event_participant_members_tags"]', form).tagsinput("items");
                data['trainers'] = $('input[name="event_participant_trainers_tags"]', form).tagsinput("items");
                data['daystorepeat'] = rData;
                data[ $('input[name="event_start_time"]', form).attr('data-name') ] = $('input[name="event_start_time"]', form).val();
                data[ $('input[name="event_end_time"]', form).attr('data-name') ] = $('input[name="event_end_time"]', form).val();
                data[ $('select[name="event_status"]', form).attr('data-name') ] = $('select[name="event_status"] :selected', form).attr('data-id');
                data[ $('select[name="event_categories"]', form).attr('data-name') ] = $('select[name="event_categories"] :selected', form).attr('data-id');
                data[ $('select[name="event_resource"]', form).attr('data-name') ] = $('select[name="event_resource"] :selected', form).attr('data-id');
                this.save(data, form);
            },
            saveEditEvent: function (form) {
                var data = {};
                data = this.getSinglEeventSaveData(form);
                this.edit(data, form);
            },
            saveEvents: function (form) {
                var mode = $('label.repeat-type-selection.active', form).attr('name');
                if (mode == 'single') {
                    this.saveSingleEvent(form);
                } else if (mode == 'manual' || mode == 'range') {
                    this.saveRepeatEvents(form)
                } else {
                    if (this.defs.preset == 1) {
                        this.saveEditEvent(form);
                    } else {
                        alert('Error...'); // TODO: Na to valw na kanei alert ena aplo minima me to toastr
                    }
                }
            },
            completeevent: function (form) {
                var mykatastima = Get_Mykatastima(false);
                var eventId = this.defs.eventid;
                var urlComplete = "<?php
echo MyCustomHelperPages::makePage(CHCrmCConstantsPages::CONST_PAGES_ADMIN_DYNPAGE_HELPERPAGE_PARAM3, array(
    'helperpage' => $di->controller_params_array['settings']['Helper_Page_Posts'],
    'mykatastima' => 'mykatastimaforreplace',
    'param1' => 'plugin',
    'param2' => 'fullcalendar',
    'param3' => 'completeevent'
));
?>";
                urlComplete += eventId + "/";
                urlComplete = urlComplete.replace('/mykatastimaforreplace/', '/' + mykatastima + '/');
                $.ajax({
                    url: urlComplete,
                    type: "POST",
                    async: false,
                    dataType: "json",
                    success: function (result) {
                        if (result.status == '1') {
                            $('button[data-dismiss="modal"]', form).trigger('click');
                            toastrMsg('', '<span><?php echo B2b\Models\CoreModels\PpB2bAdminVftranslate::getKeyvalueFromKeyname('savedtitle') ?></span>', 'success');
                            var calendar = $('#calendar-private');
                            var view = calendar.fullCalendar('getView');
                            var date_start = calendar.fullCalendar('getDate');
                            calendar.fullCalendar('destroy');
                            LoadFullCalendarv261(view.name, date_start, mykatastima, CALFKPLUGIN);
                        } else {
                            toastrMsg('', '<span class="text-center"><?php echo B2b\Models\CoreModels\PpB2bAdminVftranslate::getKeyvalueFromKeyname('errortitle') ?></span><br><span><?php echo B2b\Models\CoreModels\PpB2bAdminVftranslate::getKeyvalueFromKeyname('codetitle') ?>: ' + result.status_code + '</span>', 'error');
                        }
                    },
                    error: function () {
                        toastrMsg('', '<span class="text-center"><?php echo B2b\Models\CoreModels\PpB2bAdminVftranslate::getKeyvalueFromKeyname('errortitle') ?></span><br><span><?php echo B2b\Models\CoreModels\PpB2bAdminVftranslate::getKeyvalueFromKeyname('codetitle') ?>: ' + result.status_code + '</span>', 'error');
                    }
                });
            },
            edit: function (data, form) {
                var mykatastima = Get_Mykatastima(false);
                var eventId = this.defs.eventid;
                var urlSaveEdit = "<?php
echo MyCustomHelperPages::makePage(CHCrmCConstantsPages::CONST_PAGES_ADMIN_DYNPAGE_HELPERPAGE_PARAM3, array(
    'helperpage' => $di->controller_params_array['settings']['Helper_Page_Posts'],
    'mykatastima' => 'mykatastimaforreplace',
    'param1' => 'plugin',
    'param2' => 'fullcalendar',
    'param3' => 'editsingleevent'
));
?>";
                urlSaveEdit += eventId + "/";
                urlSaveEdit = urlSaveEdit.replace('/mykatastimaforreplace/', '/' + mykatastima + '/');
                $.ajax({
                    url: urlSaveEdit,
                    type: "POST",
                    async: false,
                    dataType: "json",
                    data: {
                        data: data
                    },
                    success: function (result) {
                        if (result.status == '1') {
                            $('button[data-dismiss="modal"]', form).trigger('click');
                            toastrMsg('', '<span><?php echo B2b\Models\CoreModels\PpB2bAdminVftranslate::getKeyvalueFromKeyname('savedtitle') ?></span>', 'success');
                            var calendar = $('#calendar-private');
                            var view = calendar.fullCalendar('getView');
                            var date_start = calendar.fullCalendar('getDate');
                            calendar.fullCalendar('destroy');
                            LoadFullCalendarv261(view.name, date_start, mykatastima, CALFKPLUGIN);
                        } else {
                            toastrMsg('', '<span class="text-center"><?php echo B2b\Models\CoreModels\PpB2bAdminVftranslate::getKeyvalueFromKeyname('errortitle') ?></span><br><span><?php echo B2b\Models\CoreModels\PpB2bAdminVftranslate::getKeyvalueFromKeyname('codetitle') ?>: ' + result.status_code + '</span>', 'error');
                        }
                    },
                    error: function () {
                        toastrMsg('', '<span class="text-center"><?php echo B2b\Models\CoreModels\PpB2bAdminVftranslate::getKeyvalueFromKeyname('errortitle') ?></span><br><span><?php echo B2b\Models\CoreModels\PpB2bAdminVftranslate::getKeyvalueFromKeyname('codetitle') ?>: ' + result.status_code + '</span>', 'error');
                    }
                });
            },
            save: function (data, form) {
                var mykatastima = Get_Mykatastima(false);
                var urlSave = "<?php echo MyCustomHelperPages::makePage(CHCrmCConstantsPages::CONST_PAGES_ADMIN_DYNPAGE_HELPERPAGE_PARAM1, array('helperpage' => 'inner_home_crm_calendar_managment', 'mykatastima' => 'mykatastimaforreplace', 'param1' => 'action_eventsave')); ?>";
                urlSave = urlSave.replace('/mykatastimaforreplace/', '/' + mykatastima + '/');
                $.ajax({
                    url: urlSave,
                    type: "POST",
                    async: false,
                    dataType: "json",
                    data: {
                        data: data
                    },
                    success: function (result) {
                        if (result.status == '1') {
                            $('button[data-dismiss="modal"]', form).trigger('click');
                            toastrMsg('', '<span><?php echo B2b\Models\CoreModels\PpB2bAdminVftranslate::getKeyvalueFromKeyname('savedtitle') ?></span>', 'success');
                            var calendar = $('#calendar-private');
                            var view = calendar.fullCalendar('getView');
                            var date_start = calendar.fullCalendar('getDate');
                            calendar.fullCalendar('destroy');
                            LoadFullCalendarv261(view.name, date_start, mykatastima, CALFKPLUGIN);
                        } else {
                            toastrMsg('', '<span class="text-center"><?php echo B2b\Models\CoreModels\PpB2bAdminVftranslate::getKeyvalueFromKeyname('errortitle') ?></span><br><span><?php echo B2b\Models\CoreModels\PpB2bAdminVftranslate::getKeyvalueFromKeyname('codetitle') ?>: ' + result.status_code + '</span>', 'error');
                        }
                    },
                    error: function () {
                        toastrMsg('', '<span class="text-center"><?php echo B2b\Models\CoreModels\PpB2bAdminVftranslate::getKeyvalueFromKeyname('errortitle') ?></span><br><span><?php echo B2b\Models\CoreModels\PpB2bAdminVftranslate::getKeyvalueFromKeyname('codetitle') ?>: ' + result.status_code + '</span>', 'error');
                    }
                });
            },
            registerHovers: function (calendar) {
                var dwHover = function () {
                    $('td.fc-widget-content', calendar).hover(
                            function () {
                                if ($(this).prev().hasClass('fc-time')) {
                                    $(this)
                                            .css('background-color', 'lightblue')
                                            .css('cursor', 'pointer')
                                }
                            },
                            function () {
                                if ($(this).prev().hasClass('fc-time')) {
                                    $(this)
                                            .css('background-color', '')
                                            .css('cursor', '')
                                }
                            }
                    );
                }();
                var mHover = function () {
                    $('td.fc-day', calendar).hover(
                            function () {
                                $(this)
                                        .css('background-color', 'lightblue')
                                        .css('cursor', 'pointer')
                            },
                            function () {
                                $(this)
                                        .css('background-color', '')
                                        .css('cursor', '')
                            }
                    );
                }();
            },
            registerMouseDUEffect: function (calendar) {
                var dwDUEffect = function () {
                    $('td.fc-widget-content', calendar).mousedown(
                            function () {
                                if ($(this).prev().hasClass('fc-time')) {
                                    $(this)
                                            .css('background-color', 'grey');
                                }
                            }
                    );
                    $('td.fc-widget-content', calendar).mouseup(
                            function () {
                                if ($(this).prev().hasClass('fc-time')) {
                                    $(this)
                                            .css('background-color', 'lightblue');
                                }
                            }
                    );
                }();
                var mDUEffect = function () {
                    $('td.fc-day', calendar).mousedown(function () {
                        $(this)
                                .css('background-color', 'grey');
                    });
                    $('td.fc-day', calendar).mouseup(function () {
                        $(this)
                                .css('background-color', 'lightblue');
                    });
                }();
            },
            dClick: function (resource, date, event, view) {
                if (view.name === 'agendaDay') {
                    this.defs.resid = resource.id;
                }
                Dl.Calendar.eventAdd(date.toISOString());
            },
            eventAdd: function (datetime) {
                // DLS20161012
                if ('<?php echo \B2b\Models\CoreModels\DlB2bAdminFullCalendar::Get_Create_Event_Add_Mode(); ?>' === 'portlet') {
                    this.ProcessPortletEvent({'s': '', 'sD': datetime});
                } else if ('<?php echo \B2b\Models\CoreModels\DlB2bAdminFullCalendar::Get_Create_Event_Add_Mode(); ?>' === 'modal') {
                    HelperFns.Calendar.Event.loadMainModal({'s': '', 'sD': datetime});
                } else {
                    return false;
                    // TODO: Na dw ti kanw se periptwsi pou einai lathos to mode.
                }
                // DLE20161012
            },
            makeDatatable: function (table) {
                table.fadeIn(500);
                table.dataTable({
                    "language": {
                        "aria": {
                            "sortAscending": "",
                            "sortDescending": ""
                        },
                        "emptyTable": "",
                        "info": "Total: <span style='color: red'><strong> _TOTAL_ </strong></span> dates.",
                        "infoEmpty": "",
                        "infoFiltered": "",
                        "lengthMenu": "Show _MENU_",
                        "search": "",
                        "zeroRecords": "",
                        "paginate": {
                            "previous": "Prev",
                            "next": "Next"
                        }
                    },
                    "columnDefs": [{
                            "orderable": false,
                            "searchable": false,
                            "targets": [0, 1, 2]
                        }],
                    "lengthMenu": [
                        [5, 10, 15],
                        [5, 10, 15]
                    ],
                    "pageLength": 5,
                    "sDom": '<"top"i>rt<"bottom"lp><"clear">',
                    "order": []
                });
                table.on('click', '.repeat-event-disable', function () {
                    if ($(this).closest('tr').attr('data-repeat') == '1') {
                        $(this)
                                .removeClass('fa-minus-circle')
                                .addClass('fa-undo')
                                .attr('title', 'Undo')
                                .closest('tr')
                                .css('background-color', '#EF4836')
                                .attr('data-repeat', '0')
                                .find('.repeat-text')
                                .text('NO');
                    } else {
                        $(this)
                                .removeClass('fa-undo')
                                .addClass('fa-minus-circle')
                                .attr('title', 'Disable')
                                .closest('tr')
                                .css('background-color', '')
                                .attr('data-repeat', '1')
                                .find('.repeat-text')
                                .text('YES');
                    }
                });
            },
            createTableForRepeatPreview: function (days) {
                var tHead = '<thead>' +
                        '<tr>' +
                        '<th class="text-center" style="width: 50%;"> Date </th>' +
                        '<th class="text-center" style="width: 25%;"> Repeat </th>' +
                        '<th class="text-center" style="width: 25%;"> Remove </th>' +
                        '</tr>' +
                        '</thead>';
                var tBody = '<tbody>';
                $.each(days, function (key, value) {
                    tBody += '<tr data-repeat="1" data-date-repeat="' + value + '">';
                    tBody += '<td class="odd gradeX text-center repeat-date" style="width: 50%;">' + value + '</td>';
                    tBody += '<td class="odd gradeX text-center repeat-text" style="width: 25%;">YES</td>';
                    tBody += '<td class="odd gradeX text-center" style="width: 25%;"><a><i class="fa fa-minus-circle repeat-event-disable" title="Disable"></i></a></td>';
                    tBody += '</tr>';
                });
                tBody += '</tbody>';
                return {
                    "table_html": '<table id="repeat-days-preview" class="table table-striped table-bordered table-hover table-checkable" style="display: none; width: 100%;">' + tHead + tBody + '</table>',
                    "table_id": "repeat-days-preview"
                }
            },
            createDaysForRepeatBySingle: function (dates) {
                var days = [];
                $.each(dates, function (key, value) {
                    days.push(Dl.Gen.formatDate(value)['date']);
                });
                return days;
            },
            createDaysForRepeatByRange: function (weekdays, dates) {
                var days = [];
                $.each(dates, function (key, value) {
                    if ($.inArray(value.getDay(), weekdays) != -1) {
                        days.push(Dl.Gen.formatDate(value)['date']);
                    }
                });
                return days;
            },
            getMultiSelectedDates: function (form) {
                return $('[name="event_days_repeat_manual"]', form).datepicker("getDates");
            },
            getRangeDates: function (form) {
                return {
                    "from": $('[name="event_days_repeat_from"]', form).datepicker("getDate"),
                    "to": $('[name="event_days_repeat_to"]', form).datepicker("getDate")
                };
            },
            getDaysToRepeat: function (form) {
                var days = [];
                $('#buttons-group label', form).each(function () {
                    if ($(this).hasClass('active')) {
                        days.push(parseInt($(this).find('input').attr('data-day')));
                    }
                });
                return days;
            },
            generateDaysToRepeatRange: function (form) {
                var days = Dl.Calendar.getDaysToRepeat(form);
                if ($.isEmptyObject(days)) {
                    toastrMsg('', '<?php echo \B2b\Models\CoreModels\PpB2bAdminVfroutepageplugintranslateavailableplugin::Get_Translation(B2b\Models\CoreModels\DlB2bAdminMetronic454PluginModalGeneral::$AvailablePluginAliasName, 'selectdaystorepeattitle'); ?>', 'error');
                } else {
                    var range = Dl.Calendar.getRangeDates(form);
                    var dtfrom = Dl.Gen.formatDate(range.from, '/', true);
                    var dtto = Dl.Gen.formatDate(range.to, '/', true);
                    if (new Date(dtto.date) <= new Date(dtfrom.date)) {
                        $('#repeat_container').empty();
                        toastrMsg('', '<?php echo \B2b\Models\CoreModels\PpB2bAdminVfroutepageplugintranslateavailableplugin::Get_Translation(B2b\Models\CoreModels\DlB2bAdminMetronic454PluginModalGeneral::$AvailablePluginAliasName, 'toishighορequalfromtitle'); ?>', 'error');
                    } else {
                        var selectedDates = Dl.Gen.generateDates(dtfrom.date, dtto.date);
                        var finDays = Dl.Calendar.createDaysForRepeatByRange(days, selectedDates);
                        var table = Dl.Calendar.createTableForRepeatPreview(finDays);
                        $('#repeat_container').empty().append(table.table_html);
                        $('#repeat_container').fadeIn(750);
                        Dl.Calendar.makeDatatable($('#' + table.table_id));
                    }
                }
            },
            generateDaysToRepeatSingle: function (form) {
                var selectedDates = Dl.Calendar.getMultiSelectedDates(form);
                if ($.isEmptyObject(selectedDates)) {
                    toastrMsg('', '<?php echo \B2b\Models\CoreModels\PpB2bAdminVfroutepageplugintranslateavailableplugin::Get_Translation(B2b\Models\CoreModels\DlB2bAdminMetronic454PluginModalGeneral::$AvailablePluginAliasName, 'selectdatestorepeat'); ?>', 'error');
                } else {
                    var finDays = Dl.Calendar.createDaysForRepeatBySingle(selectedDates);
                    var table = Dl.Calendar.createTableForRepeatPreview(finDays);
                    $('#repeat_container').empty().append(table.table_html);
                    $('#repeat_container').fadeIn(750);
                    Dl.Calendar.makeDatatable($('#' + table.table_id));
                }
            },
            initManualSelectionChange: function (form) {
                $('[name="event_days_repeat_manual"]').off('changeDate').on('changeDate', function () {
                    Dl.Calendar.generateDaysToRepeatSingle(form);
                });
            },
            initRangeSelectionChange: function (form) {
                $('[name="event_days_repeat_from"], [name="event_days_repeat_to"]').off('changeDate').on('changeDate', function () {
                    Dl.Calendar.generateDaysToRepeatRange(form);
                });
            },
            initCancelButton: function (form) {
                var $this = this;
                if ('<?php echo \B2b\Models\CoreModels\DlB2bAdminFullCalendar::Get_Create_Event_Add_Mode(); ?>' === 'portlet') {
                    $('button[data-dismiss="modal"]', form).off('click').on('click', function () {
                        $this.getCreateEventPortletParentContainer().fadeOut(500, function () {
                            App.scrollTo($('.calendar-div-wrapper'));
                        });
                    });
                }
            },
            initStartEndTime: function (form, start, end) {
                var format = '<?php echo $calendarpluginarrparams['time_format'] == 12 ? "true" : "false"; ?>';
                $('[name="event_start_time"]', form).inputmask("hh:mm", {
                    mask: '<?php echo $calendarpluginarrparams['time_format'] == 12 ? "h:s t\\m" : "h:s"; ?>',
                    placeholder: '__:__',
                    alias: "datetime",
                    hourFormat: '<?php echo $calendarpluginarrparams['time_format'] == 12 ? "12" : "24"; ?>'
                }).timepicker({
                    defaultTime: start,
                    minuteStep: 15,
                    showMeridian: format === 'false' ? false : true
                });
                $('[name="event_end_time"]', form).inputmask("hh:mm", {
                    mask: '<?php echo $calendarpluginarrparams['time_format'] == 12 ? "h:s t\\m" : "h:s"; ?>',
                    placeholder: '__:__',
                    alias: "datetime",
                    hourFormat: '<?php echo $calendarpluginarrparams['time_format'] == 12 ? "12" : "24"; ?>'
                }).timepicker({
                    defaultTime: end,
                    minuteStep: 15,
                    showMeridian: format === 'false' ? false : true
                });
//                $('[name="event_start_time"], [name="event_end_time"]', form).on('blur', function() {
//                    $(this).timepicker('hideWidget');
//                });
            },
            initStartEndChageTimeValidation: function (form) {
                /*$('[name="event_start_time"], [name="event_end_time"]').change(function () {
                 var startTime = $('[name="event_start_time"]', form).data("timepicker").getTime();
                 var endTime = $('[name="event_end_time"]', form).data("timepicker").getTime();
                 if (startTime > endTime) {
                 $(this).val('');
                 form.validate().element($(this));
                 } else {
                 form.validate().element($(this));
                 }
                 });*/
            },
            initSingleFromToDates: function (form, start, end) {
                var format = '<?php echo $calendarpluginarrparams['time_format'] == 12 ? "true" : "false"; ?>';
                $("input[name='event_start_date']", form).inputmask("d/m/y", {
                }).datepicker({
                    autoclose: true,
                    isRTL: App.isRTL(),
                    todayBtn: false,
                    showMeridian: format === 'false' ? false : true,
                    format: 'dd/mm/yyyy', // TODO: Na to parw apo settings
                    language: '<?php MyCustomHelperLng::My_get_current_lng_shortname(); ?>',
                    keyboardNavigation: false
                }).datepicker('update', start);
                $("input[name='event_end_date']", form).inputmask("d/m/y", {
                }).datepicker({
                    autoclose: true,
                    isRTL: App.isRTL(),
                    todayBtn: false,
                    showMeridian: format === 'false' ? false : true,
                    format: 'dd/mm/yyyy', // TODO: Na to parw apo settings
                    language: '<?php MyCustomHelperLng::My_get_current_lng_shortname(); ?>',
                    keyboardNavigation: false
                }).datepicker('update', end);
            },
            initSingleDatepicker: function (el, date) {
                var format = '<?php echo $calendarpluginarrparams['time_format'] == 12 ? "true" : "false"; ?>';
                el.inputmask("d/m/y").datepicker({
                    autoclose: true,
                    isRTL: App.isRTL(),
                    todayBtn: false,
                    showMeridian: format === 'false' ? false : true,
                    format: 'dd/mm/yyyy', // TODO: Na to parw apo settings
                    language: '<?php MyCustomHelperLng::My_get_current_lng_shortname(); ?>',
                    keyboardNavigation: false
                }).datepicker('update', date);
            },
            initFromToChageValidation: function (form) {
                $('[name="event_start_date"], [name="event_end_date"]').change(function () {
                    if ($('[name="event_start_date"]', form).val() != '' && $('[name="event_end_date"]', form).val() != '') {
                        var dateTimeFrom = $('[name="event_start_date"]', form).datepicker("getDate");
                        var dateTimeTo = $('[name="event_end_date"]', form).datepicker("getDate");
                        if (dateTimeFrom > dateTimeTo) {
                            $(this).val('');
                            form.validate().element($(this));
                        } else {
                            form.validate().element($(this));
                        }
                    }
                });
            },
            initRangeFromToDates: function (form) {
                Dl.Datepicker.initSingleDate($('[name="event_days_repeat_from"]', form));
                Dl.Datepicker.initSingleDate($('[name="event_days_repeat_to"]', form));
                Dl.Datepicker.setDate($('[name="event_days_repeat_from"]', form), moment().format());
            },
            initMultiDates: function (form) {
                Dl.Datepicker.initMultiDate($('[name="event_days_repeat_manual"]', form));
            },
            clearDaysToRepetSelected: function (form) {
                $('#buttons-group > label.btn', form).removeClass('active');
            },
            addValidatationStartEndDate: function (form) {
                $('[name="event_start_date"], [name="event_end_date"]', form).removeClass('event-ignore-field');
            },
            removeValidatationStartEndDate: function (form) {
                $('[name="event_start_date"], [name="event_end_date"]', form).addClass('event-ignore-field');
            },
            clearAllSelectedDates: function (form) {
                Dl.Datepicker.setDate($('[name="event_days_repeat_from"]', form), '');
                Dl.Datepicker.setDate($('[name="event_days_repeat_to"]', form), '');
                Dl.Datepicker.setDate($('[name="event_days_repeat_manual"]', form), '');
            },
            clearPreviewTableContainer: function (form) {
                $('#repeat_container', form).empty();
            },
            getDefaultDatetimeStart: function () {
                // TODO: Na valw to format na to pernei dynamika analoga me to calendar i me tis rithmiseis.
                //var format = "DD-MM-YYYY h:mm A    H:mm";
                var format = '<?php echo $calendarpluginarrparams['time_format'] == 12 ? "DD-MM-YYYY h:mm A" : "DD-MM-YYYY H:mm"; ?>';
                var offset = 1; // TODO: Na to parw apo tis rithmiseis
                var datestart = moment(new Date()).format(format);
                var dateend = moment(new Date()).add(offset, 'hours').format(format);
                return {
                    datestart: datestart.split(' ')[0],
                    dateend: dateend.split(' ')[0],
                    timestart: datestart.split(' ')[1],
                    timeend: dateend.split(' ')[1]
                };
            },
            fixTagsContainer: function (form) {
                $('.bootstrap-tagsinput', form).css('display', 'block');
            },
            fixDatetimeStart: function (data) {
                if ($.isEmptyObject(data)) {
                    return this.getDefaultDatetimeStart();
                } else {
                    if (data.s === 'now') {
                        return this.getDefaultDatetimeStart();
                    } else {
                        // TODO: Na valw to format na to pernei dynamika analoga me to calendar i me tis rithmiseis.
                        var format = '<?php echo $calendarpluginarrparams['time_format'] == 12 ? "DD-MM-YYYY h:mm" : "DD-MM-YYYY H:mm"; ?>';
                        var offset = 1; // TODO: Na to parw apo tis rithmiseis
                        var datestart = moment(data.sD).format(format);
                        var dateend = moment(data.sD).add(offset, 'hours').format(format)
                        return {
                            datestart: datestart.split(' ')[0],
                            dateend: dateend.split(' ')[0],
                            timestart: datestart.split(' ')[1],
                            timeend: dateend.split(' ')[1]
                        };
                    }
                }

            },
            initDaysToRepeatSelectUpdate: function (form) {
                $('#buttons-group > label.btn', form).on('click', function () {
                    //Dl.Calendar.generateDaysToRepeatRange(form);
                    Dl.Datepicker.setDate($('[name="event_days_repeat_to"]', form), '');
                    Dl.Calendar.clearPreviewTableContainer(form);
                });
            },
            initTypeSelection: function (form, time, data) {
                time = time == '' || typeof time == 'undefined' ? 500 : time;
                $('.repeat-type-selection', form).on('click', function () {
                    var type = $(this).attr('name');
                    if (type == 'single') {
                        $('[name="event_days_repeat_from"], [name="event_days_repeat_to"], [name="event_days_repeat_to_days"], [name="event_days_repeat_manual"]', form).fadeOut(time - time);
                        $('[name="event_single_event"]', form).fadeIn(time);
                        Dl.Calendar.clearAllSelectedDates(form);
                        Dl.Calendar.clearPreviewTableContainer(form);
                        Dl.Calendar.clearDaysToRepetSelected(form);
                        Dl.Calendar.addValidatationStartEndDate(form);
                    } else if (type == 'range') {
                        $('[name="event_single_event"], [name="event_days_repeat_manual"]', form).fadeOut(time - time);
                        $('[name="event_days_repeat_from"], [name="event_days_repeat_to"], [name="event_days_repeat_to_days"]', form).fadeIn(time);
                        Dl.Calendar.clearPreviewTableContainer(form);
                        Dl.Calendar.removeValidatationStartEndDate(form);
                        Dl.Datepicker.setDate($('[name="event_days_repeat_from"]', form), moment().format());
                        Dl.Datepicker.setDate($('[name="event_days_repeat_to"]', form), '');
                    } else if (type == 'manual') {
                        $('[name="event_single_event"], [name="event_days_repeat_from"], [name="event_days_repeat_to"], [name="event_days_repeat_to_days"]', form).fadeOut(time - time);
                        $('[name="event_days_repeat_manual"]', form).fadeIn(time);
                        Dl.Calendar.clearAllSelectedDates(form);
                        Dl.Calendar.clearPreviewTableContainer(form);
                        Dl.Calendar.clearDaysToRepetSelected(form);
                        Dl.Calendar.removeValidatationStartEndDate(form);
                    } else {
                        return false;
                    }
                });
            },
            initFormFieldValidatiators: function (form) {
                var self = this;
                form.validate({
                    errorElement: 'span', //default input error message container
                    errorClass: 'help-block help-block-error', // default input error message class
                    focusInvalid: false, // do not focus the last invalid input
                    ignore: ".event-ignore-field", // validate all fields including form hidden input
                    messages: {
                        event_start_time: '<?php echo \B2b\Models\CoreModels\PpB2bAdminVftranslate::getKeyvalueFromKeyname('eventstarttimeerror'); ?>',
                        event_end_time: '<?php echo \B2b\Models\CoreModels\PpB2bAdminVftranslate::getKeyvalueFromKeyname('eventendtimeerror'); ?>',
                        event_subject: '<?php echo \B2b\Models\CoreModels\PpB2bAdminVftranslate::getKeyvalueFromKeyname('eventsubjecterror'); ?>',
                        event_start_date: '<?php echo \B2b\Models\CoreModels\PpB2bAdminVftranslate::getKeyvalueFromKeyname('eventstarterror'); ?>',
                        event_end_date: '<?php echo \B2b\Models\CoreModels\PpB2bAdminVftranslate::getKeyvalueFromKeyname('eventenderror'); ?>',
                        event_status: '<?php echo \B2b\Models\CoreModels\PpB2bAdminVftranslate::getKeyvalueFromKeyname('eventstatus'); ?>'
                    },
                    rules: {
                        event_start_time: {
                            required: true
                        },
                        event_end_time: {
                            required: true
                        },
                        event_stauts: {
                            required: true
                        },
                        event_subject: {
                            required: true
                        },
                        event_start_date: {
                            required: true
                        },
                        event_end_date: {
                            required: true
                        }
                    },
                    // Sinartisis apo to plugin.
                    highlight: function (element) { // hightlight error inputs
                        $(element).closest('.form-group').addClass('has-error'); // set error class to the control group
                    },
                    unhighlight: function (element) { // revert the change done by hightlight
                        $(element).closest('.form-group').removeClass('has-error'); // set error class to the control group
                    },
                    success: function (label) {
                        label.closest('.form-group').removeClass('has-error'); // set success class to the control group
                    },
                    submitHandler: function (form) {
                        self.saveEvents(form);
                    }
                });
            },
            initMembersSelection: function (form) {
                //alert('Will add onclick');
                $('[name="event_members_search"]', form).off('click').on('click', function () {
                    Dl.Calendar.addMembers();
                });
            },
            initTrainersSelection: function (form) {
                $('[name="event_trainers_search"]', form).off('click').on('click', function () {
                    Dl.Calendar.addTrainers();
                });
            },
            initMembersTags: function (form) {
                $('[name="event_participant_members_tags"]', form).tagsinput({
                    itemValue: 'id',
                    itemText: 'text',
                    freeInput: false
                });
            },
            initMembersTagsSuggestionEngine: function (form) {
                var membersSelection = $('input[name="event_add_members"]', form);
                var murl = '<?php echo MyCustomHelperPages::makePage(CHCrmCConstantsPages::CONST_PAGES_ADMIN_DYNPAGE_HELPERPAGE_PARAM2, array('helperpage' => 'inner_home_crm_calendar_managment', 'param1' => 'action_suggestion', 'param2' => 'members')); ?>';
                var suggestion = new Bloodhound({
                    datumTokenizer: function (data) {
                        return data.tokens;
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace,
                    remote: {
                        url: murl + '%QUERY/',
                        wildcard: '%QUERY'
                    }
                });
                suggestion.initialize();
                membersSelection.typeahead(null, {
                    highlight: false,
                    displayKey: 'key',
                    hint: false,
                    source: suggestion.ttAdapter(),
                    limit: 10
                });
                membersSelection.on('blur', function () {
                    $(this).val('');
                });
                membersSelection.bind('typeahead:select', function (ev, su) {
                    $('[name="event_participant_members_tags"]', form).tagsinput('add', {
                        "id": su.id,
                        "text": su.key
                    });
                    suggestion.initialize();
                    $(this).val('');
                });
                membersSelection.bind('typeahead:close', function () {
                    suggestion.initialize();
                    $(this).val('');
                });
            },
            initInputSelectAll: function (form) {
                $('input', form).on('click focus', function () {
                    $(this).select();
                });
            },
            initTrainersTags: function (form) {
                $('[name="event_participant_trainers_tags"]', form).tagsinput({
                    itemValue: 'id',
                    itemText: 'text',
                    freeInput: false
                });
            },
            initTrainersTagsSuggestionEngine: function (form) {
                var trainersSelection = $('input[name="event_add_trainers"]', form);
                var murl = '<?php echo MyCustomHelperPages::makePage(CHCrmCConstantsPages::CONST_PAGES_ADMIN_DYNPAGE_HELPERPAGE_PARAM2, array('helperpage' => 'inner_home_crm_calendar_managment', 'param1' => 'action_suggestion', 'param2' => 'trainers')); ?>';
                var suggestion = new Bloodhound({
                    datumTokenizer: function (data) {
                        return data.tokens;
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace,
                    remote: {
                        url: murl + '%QUERY/',
                        wildcard: '%QUERY'
                    }
                });
                suggestion.initialize();
                trainersSelection.typeahead(null, {
                    highlight: false,
                    displayKey: 'key',
                    hint: false,
                    source: suggestion.ttAdapter(),
                    limit: 10
                });
                trainersSelection.on('blur', function () {
                    $(this).val('');
                });
                trainersSelection.bind('typeahead:select', function (ev, su) {
                    $('[name="event_participant_trainers_tags"]', form).tagsinput('add', {
                        "id": su.id,
                        "text": su.key
                    });
                    suggestion.initialize();
                    $(this).val('');
                });
                trainersSelection.bind('typeahead:close', function () {
                    suggestion.initialize();
                    $(this).val('');
                });
            },
            initDefaultResourceSelected: function (form) {
                var resid = this.defs.resid;
                if (resid != '') {
                    $('[name="event_resource"] option[data-custom-id="' + resid + '"]', form).attr('selected', true);
                }
            },
            initDeleteEvent: function (form) {
                var mykatastima = Get_Mykatastima(false);
                var del = DlDeleteRecord({
                    afterDelete: function (btn) {
                        $('button[data-dismiss="modal"]', form).trigger('click');
                        var calendar = $('#calendar-private');
                        var view = calendar.fullCalendar('getView');
                        var date_start = calendar.fullCalendar('getDate');
                        calendar.fullCalendar('destroy');
                        LoadFullCalendarv261(view.name, date_start, mykatastima, CALFKPLUGIN);
                    }
                });
                $('.delete-event-btn', form).confirmation({
                    singleton: true,
                    onConfirm: function () {
                        del.Delete($(this));
                    },
                    title: '<?php echo B2b\Models\CoreModels\DlB2bAdminMetronic454PluginDeleteRecord::Get_Delete_Confirmation_Title(); ?>',
                    btnOkClass: '<?php echo B2b\Models\CoreModels\DlB2bAdminMetronic454PluginDeleteRecord::Get_Delete_Confirmation_Button_Ok_Class(); ?>',
                    btnCancelClass: '<?php echo B2b\Models\CoreModels\DlB2bAdminMetronic454PluginDeleteRecord::Get_Delete_Confirmation_Button_Cancel_Class(); ?>',
                    btnOkIcon: '<?php echo B2b\Models\CoreModels\DlB2bAdminMetronic454PluginDeleteRecord::Get_Delete_Confirmation_Button_Ok_Icon(); ?>',
                    btnCancelIcon: '<?php echo B2b\Models\CoreModels\DlB2bAdminMetronic454PluginDeleteRecord::Get_Delete_Confirmation_Button_Cancel_Icon(); ?>',
                    btnOkLabel: '<?php echo B2b\Models\CoreModels\DlB2bAdminMetronic454PluginDeleteRecord::Get_Delete_Confirmation_Button_Ok_Label(); ?>',
                    btnCancelLabel: '<?php echo B2b\Models\CoreModels\DlB2bAdminMetronic454PluginDeleteRecord::Get_Delete_Confirmation_Button_Cancel_Label(); ?>',
                    template: <?php echo json_encode(B2b\Models\CoreModels\DlB2bAdminMetronic454PluginDeleteRecord::Get_Delete_Confirmation_Template()); ?>
                });
            },
            initPresetValues: function (data, form) {
                var $this = this;
                $.each(data, function (key, value) {
                    if (value.type === 'input') {
                        $(value.selector, form).val(value.value);
                    } else if (value.type === 'select') {
                        $(value.selector + ' option[data-id="' + value.value + '"]', form).attr('selected', true);
                    } else if (value.type === 'tags') {
                        $.each(value.value, function (tagid, tagtext) {
                            $(value.selector, form).tagsinput('add', {
                                "id": tagid,
                                "text": tagtext
                            });
                        });
                    } else if (value.type === 'datepicker') {
                        var date = moment(value.value).format('DD/MM/YYYY');
                        $this.initSingleDatepicker($(value.selector), date);
                    } else {
                        return;
                    }
                });
            },
            initCompleteEvent: function (form) {
                var $this = this;
                $('.complete-event-btn', form).off('click').on('click', function () {
                    $this.completeevent(form);
                });
            },
            ProcessPortletEvent: function (data) {
                var mykatastima = Get_Mykatastima(false);
                var $this = this;
                var urlContents = '<?php
$di = Phalcon\DI::getDefault();
echo MyCustomHelperPages::makePage(CHCrmCConstantsPages::CONST_PAGES_ADMIN_DYNPAGE_HELPERPAGE, [
    'helperpage' => 'inner_home_crm_event_modal_contents',
    'mykatastima' => 'mykatastimaforreplace'
]);
?>';
                urlContents = urlContents.replace('/mykatastimaforreplace/', '/' + mykatastima + '/');
                urlContents += 'new/-1/';
                DlGeneralAjax.getAjaxData(urlContents, '', function (gData) {
                    $('#parentdata', $this.getCreateEventPortletParentContainer()).empty().append(gData.tpl);
                    $this.InitForm($('.dl-create-new-event', $this.getCreateEventPortletContainer()), data, gData.preset, gData.presetvals);
                    $this.getCreateEventPortletParentContainer().fadeIn(750);
                });
                //var eventTpl = '<?php echo json_encode(\B2b\Models\CoreModels\DlB2bAdminCreateEventModalHelper::Get_Create_Event_Modal_Body_Content()); ?>';
                //var eventTpl = eventTpl.substring(1, eventTpl.length - 1);
            },
            EditCompleteEvent: function (data, edit) {
                var mykatastima = Get_Mykatastima(false);
                this.defs.eventid = edit.id;
                var $this = this;
                var urlContents = '<?php
$di = Phalcon\DI::getDefault();
echo MyCustomHelperPages::makePage(CHCrmCConstantsPages::CONST_PAGES_ADMIN_DYNPAGE_HELPERPAGE, [
    'helperpage' => 'inner_home_crm_event_modal_contents_edit',
    'mykatastima' => 'mykatastimaforreplace'
]);
?>';
                urlContents = urlContents.replace('/mykatastimaforreplace/', '/' + mykatastima + '/');
                urlContents += edit.mode + '/' + edit.id + '/';
                DlGeneralAjax.getAjaxData(urlContents, '', function (gData) {
                    $('#parentdata', $this.getCreateEventPortletParentContainer()).empty().append(gData.tpl);
                    $this.InitForm($('.dl-create-new-event', $this.getCreateEventPortletContainer()), data, gData.preset, gData.presetvals);
                    $this.getCreateEventPortletParentContainer().fadeIn(750);
                });
            },
            initExtraPresetData: function (form) {
                var portlet = '#<?php echo \B2b\Models\CoreModels\DlB2bAdminFullCalendar::Get_Create_Event_Portlet_ID(); ?>';
                portlet = $(portlet);
                portlet.removeClass('ligh').addClass('red-flamingo');
            },
            InitNoSubmitHandler: function (form) {
                form.on('keyup keypress keydown', function (e) {
                    if (e.which == 13) {
                        e.preventDefault();
                        return false;
                    }
                });
            },
            SetDefs: function (defs) {
                this.defs.preset = defs.preset;
                this.defs.presetvals = defs.presetvals;
                this.defs.form = defs.form;
            },
            InitForm: function (form, data, preset, presetvals) {
                if (form == '' || $.isEmptyObject(form) || typeof form == 'undefined') {
                    return false;
                }
                this.InitNoSubmitHandler(form);
                this.SetDefs({preset: preset, presetvals: presetvals, form: form});
                this.initCancelButton(form);
                var datetime = this.fixDatetimeStart(data);
                this.initStartEndTime(form, datetime.timestart, datetime.timeend);
                //this.initStartEndTimeChageValidation(form);
                preset != 1 ? this.initSingleFromToDates(form, datetime.datestart, datetime.dateend) : '';
                this.initFromToChageValidation(form);
                this.initRangeFromToDates(form);
                this.initMultiDates(form);
                this.initTypeSelection(form, 750, data);
                //this.initMembersSelection(form);  // Edw vazei apo modal - datatable tous pelates
                //this.initTrainersSelection(form); // Edw vazei apo modal - datatable tous trainers
                this.initMembersTagsSuggestionEngine(form);
                this.initTrainersTagsSuggestionEngine(form);
                this.initMembersTags(form);
                this.initTrainersTags(form);
                this.initManualSelectionChange(form);
                this.initRangeSelectionChange(form);
                this.initDaysToRepeatSelectUpdate(form);
                this.initFormFieldValidatiators(form);
                this.fixTagsContainer(form);
                this.initInputSelectAll(form);
                this.initDefaultResourceSelected(form);
                this.initDeleteEvent(form);
                // Set preset vals if so
                if (preset == 1 && !$.isEmptyObject(presetvals)) {
                    this.initPresetValues(presetvals, form);
                    this.initCompleteEvent(form);
                    //this.initExtraPresetData(form);                    
                }
            }
        }
    };
//</script>