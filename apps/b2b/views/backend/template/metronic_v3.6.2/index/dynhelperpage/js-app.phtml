<?php
$di = Phalcon\DI::getDefault();
?>
<?php $assetspath = $di->controller_params_array['template']['template_admin_path_with_assets_path']; ?>
//<script>
    /***
     Metronic AngularJS App Main Script
     ***/

    /* Metronic App */
    var MetronicApp = angular.module("MetronicApp", [
            "ui.router",
            "ui.bootstrap",
            "oc.lazyLoad",
            "ngSanitize"
            ]);
    /* Configure ocLazyLoader(refer: https://github.com/ocombe/ocLazyLoad) */
    MetronicApp.config(['$ocLazyLoadProvider', function ($ocLazyLoadProvider) {
    $ocLazyLoadProvider.config({
// global configs go here
    });
    }]);
    /********************************************
     BEGIN: BREAKING CHANGE in AngularJS v1.3.x:
     *********************************************/
    /**
     `$controller` will no longer look for controllers on `window`.
     The old behavior of looking on `window` for controllers was originally intended
     for use in examples, demos, and toy apps. We found that allowing global controller
     functions encouraged poor practices, so we resolved to disable this behavior by
     default.
     
     To migrate, register your controllers with modules rather than exposing them
     as globals:
     
     Before:
     
     ```javascript
     function MyController() {
     // ...
     }
     ```
     
     After:
     
     ```javascript
     angular.module('myApp', []).controller('MyController', [function() {
     // ...
     }]);
     
     Although it's not recommended, you can re-enable the old behavior like this:
     
     ```javascript
     angular.module('myModule').config(['$controllerProvider', function($controllerProvider) {
     // this option might be handy for migrating old apps, but please don't use it
     // in new ones!
     $controllerProvider.allowGlobals();
     }]);
     **/

//AngularJS v1.3.x workaround for old style controller declarition in HTML
    MetronicApp.config(['$controllerProvider', function ($controllerProvider) {
// this option might be handy for migrating old apps, but please don't use it
// in new ones!
    $controllerProvider.allowGlobals();
    }]);
    /********************************************
     END: BREAKING CHANGE in AngularJS v1.3.x:
     *********************************************/

    /* Setup global settings */
    MetronicApp.factory('settings', ['$rootScope', function ($rootScope) {
// supported languages
    var settings = {
    layout: {
    pageSidebarClosed: true, // sidebar menu state
            pageBodySolid: false, // solid body color state
            pageAutoScrollOnLoad: 1000 // auto scroll to top on page load
            },
            layoutImgPath: Metronic.getAssetsPath() + 'admin/layout/img/',
            layoutCssPath: Metronic.getAssetsPath() + 'admin/layout/css/'
            };
    $rootScope.settings = settings;
    return settings;
    }]);
    /* Setup App Main Controller */
    MetronicApp.controller('AppController', ['$scope', '$rootScope', function ($scope, $rootScope) {
    $scope.$on('$viewContentLoaded', function () {
    Metronic.initComponents(); // init core components
//Layout.init(); //  Init entire layout(header, footer, sidebar, etc) on page load if the partials included in server side instead of loading with ng-include directive 
    });
    }]);
    /***
     Layout Partials.
     By default the partials are loaded through AngularJS ng-include directive. In case they loaded in server side(e.g: PHP include function) then below partial 
     initialization can be disabled and Layout.init() should be called on page load complete as explained above.
     ***/

    /* Setup Layout Part - Header */
    MetronicApp.controller('HeaderController', ['$scope', function ($scope) {
    $scope.$on('$includeContentLoaded', function () {
    Layout.initHeader(); // init header
    });
    }]);
    /* Setup Layout Part - Sidebar */
    MetronicApp.controller('SidebarController', ['$scope', function ($scope) {
    $scope.$on('$includeContentLoaded', function () {
    Layout.initSidebar(); // init sidebar
    });
    }]);
    /* Setup Layout Part - Quick Sidebar */
    MetronicApp.controller('QuickSidebarController', ['$scope', function ($scope) {
    $scope.$on('$includeContentLoaded', function () {
    setTimeout(function () {
    QuickSidebar.init(); // init quick sidebar        
    }, 2000)
            });
    }]);
    /* Setup Layout Part - Theme Panel */
    MetronicApp.controller('ThemePanelController', ['$scope', function ($scope) {
    $scope.$on('$includeContentLoaded', function () {
    Demo.init(); // init theme panel
    });
    }]);
    /* Setup Layout Part - Footer */
    MetronicApp.controller('FooterController', ['$scope', function ($scope, $state, $stateParams) {
    $scope.$on('$includeContentLoaded', function () {
    Layout.initFooter(); // init footer
    });
    }]);
    /* Setup Rounting For All Pages */
    MetronicApp.config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {
// Redirect any unmatched url
    $urlRouterProvider.otherwise("/<?php echo $di->controller_params_array['lng']; ?>/inner_home_index.html");
    $stateProvider







// Index Page
<?php
$pageid = 'inner_home_index';
$pageidsimple = str_ireplace('_', '', $pageid);
?>
    .state('<?php echo $pageidsimple; ?>', {
    url: "/:lng/<?php echo $pageid; ?>.html",
            templateUrl: function(params){ return <?php echo MyCustomHelperPages::makePageAngular($pageid); ?>; },
            data: {pageTitle: 'Application Settings Static Translates'},
            controller: "GeneralPageController",
            resolve: {
            deps: ['$ocLazyLoad', function ($ocLazyLoad) {
            return $ocLazyLoad.load({
            name: 'MetronicApp',
                    files: [
                            '<?php echo $di->controller_params_array['template']['template_admin_custom_path'] ?>js/controllers/GeneralPageController.js'
                            ]
                    });
            }]
                    }
    })




// Sites Mod Categories
<?php
$pageid = 'inner_home_sites_mod_categories';
$pageidsimple = str_ireplace('_', '', $pageid);
?>
    .state('<?php echo $pageidsimple; ?>', {
    url: "/:lng/<?php echo $pageid; ?>.html",
            templateUrl: function(params){ return <?php echo MyCustomHelperPages::makePageAngular($pageid); ?>; },
            data: {pageTitle: 'Application Settings Static Translates'},
            controller: "GeneralPageController",
            resolve: {
            deps: ['$ocLazyLoad', function ($ocLazyLoad) {
            return $ocLazyLoad.load({
            name: 'MetronicApp',
                    insertBefore: '#ng_load_plugins_before', // load the above css files before '#ng_load_plugins_before'
                    files: [
<?php
$collectionname = 'css' . $pageidsimple;
$arr = array(
    0 => array(
        'path' => $assetspath . 'global/plugins/select2/',
        'filename' => 'select2.css'
    ),
    10 => array(
        'path' => $assetspath . 'global/plugins/bootstrap-datepicker/css/',
        'filename' => 'datepicker.css'
    ),
    20 => array(
        'path' => $assetspath . 'global/plugins/datatables/plugins/bootstrap/',
        'filename' => 'dataTables.bootstrap.css'
    ),
);
$cssminify = MyTags::MyCollectionGenerateCustomMinify($arr, $collectionname, 'css', true);
echo $cssminify . ',
                                             ';
//echo '\'/' . $cssminify . '\',
//                                             ';
$collectionname = 'js' . $pageidsimple;

$arr1 = array(
    10 => array(
        'path' => $assetspath . 'global/plugins/select2/',
        'filename' => 'select2.min.js'
    ),
    20 => array(
        'path' => $assetspath . 'global/plugins/datatables/',
        'filename' => 'all.min.js'
    ),
    30 => array(
        'localurl' => MyCustomHelperPages::makePage(CHCrmCConstantsPages::CONST_PAGES_ADMIN_DYNPAGE_HELPERPAGE_PARAM1, array('helperpage' => 'js-datatable', 'param1' => 'inner_home_settings_tables')),
//. '/b2b/' . $di->controller_params_array['lng'] . '/admin/dynhelperpage/js-datatable/inner_home_settings_tables/1.js',
    ),
    40 => array(
        'localurl' => MyCustomHelperPages::makePage(CHCrmCConstantsPages::CONST_PAGES_ADMIN_DYNPAGE_HELPERPAGE_PARAM1, array('helperpage' => $di->controller_params_array['settings']['Js_Table_Ajax_Page'], 'param1' => 'col=3:sort=' . AGCHParams::$Static_Order_Asc . ':pagelength=20:lengthmenukeys=10,20,50,100,150,' . AGCHParams::$Static_Show_All . ':lengthmenuvalues=10,20,50,100,150,"All":pageurl=' . $di->controller_params_array['settings']['Param1_Inner_Home_Settings_Static_Translates_Page'])),
    //'localurl' => '/b2b/' . $di->controller_params_array['lng'] . '/admin/dynhelperpage/js-table-ajax/col=3:sort=' . AGCHParams::$Static_Order_Asc . ':pagelength=20:lengthmenukeys=10,20,50,100,150,' . AGCHParams::$Static_Show_All . ':lengthmenuvalues=10,20,50,100,150,"All":pageurl=' . $di->controller_params_array['settings']['Param1_Inner_Home_Settings_Static_Translates_Page'] . '/1.js',
    ),
    50 => array(
        'path' => $di->controller_params_array['template']['template_admin_custom_path'] . 'js/controllers/',
        'filename' => 'GeneralPageController.js'
    ),
);
$jsminify = MyTags::MyCollectionGenerateCustomMinify($arr1, $collectionname, 'js', true);
echo $jsminify;
//echo '\'/' . $jsminify . '\'';
?>
                    ]
                    });
            }]
                    }
    })

// Dashboard
            .state('dashboard', {
            url: "/dashboard.html",
                    templateUrl: "<?php echo $di->controller_params_array['template']['template_admin_path'] . $di->controller_params_array['template']['template_admin_path_base'] ?>views/dashboard.html",
                    data: {pageTitle: 'Admin Dashboard Template'},
                    controller: "DashboardController",
                    resolve: {
                    deps: ['$ocLazyLoad', function ($ocLazyLoad) {
                    return $ocLazyLoad.load({
                    name: 'MetronicApp',
                            insertBefore: '#ng_load_plugins_before', // load the above css files before a LINK element with this ID. Dynamic CSS files must be loaded between core and theme css files
                            files: [
                                    '<?php echo $assetspath; ?>global/plugins/morris/morris.css',
                                    '<?php echo $assetspath; ?>admin/pages/css/tasks.css',
                                    '<?php echo $assetspath; ?>global/plugins/morris/morris.min.js',
                                    '<?php echo $assetspath; ?>global/plugins/morris/raphael-min.js',
                                    '<?php echo $assetspath; ?>global/plugins/jquery.sparkline.min.js',
                                    '<?php echo $assetspath; ?>admin/pages/scripts/index3.js',
                                    '<?php echo $assetspath; ?>admin/pages/scripts/tasks.js',
                                    '<?php echo $di->controller_params_array['template']['template_admin_path'] . $di->controller_params_array['template']['template_admin_path_base'] ?>js/controllers/DashboardController.js'
                                    ]
                            });
                    }]
                            }
            })

// AngularJS plugins
            .state('fileupload', {
            url: "/file_upload.html",
                    templateUrl: "views/file_upload.html",
                    data: {pageTitle: 'AngularJS File Upload'},
                    controller: "GeneralPageController",
                    resolve: {
                    deps: ['$ocLazyLoad', function ($ocLazyLoad) {
                    return $ocLazyLoad.load([{
                    name: 'angularFileUpload',
                            files: [
                                    '<?php echo $assetspath; ?>global/plugins/angularjs/plugins/angular-file-upload/angular-file-upload.min.js',
                                    ]
                            }, {
                    name: 'MetronicApp',
                            files: [
                                    '<?php echo $di->controller_params_array['template']['template_admin_custom_path'] ?>js/controllers/GeneralPageController.js'
                                    ]
                    }]);
                    }]
                            }
            })

// UI Select
            .state('uiselect', {
            url: "/ui_select.html",
                    templateUrl: "views/ui_select.html",
                    data: {pageTitle: 'AngularJS Ui Select'},
                    controller: "UISelectController",
                    resolve: {
                    deps: ['$ocLazyLoad', function ($ocLazyLoad) {
                    return $ocLazyLoad.load([{
                    name: 'ui.select',
                            insertBefore: '#ng_load_plugins_before', // load the above css files before '#ng_load_plugins_before'
                            files: [
                                    '<?php echo $assetspath; ?>global/plugins/angularjs/plugins/ui-select/select.min.css',
                                    '<?php echo $assetspath; ?>global/plugins/angularjs/plugins/ui-select/select.min.js'
                                    ]
                            }, {
                    name: 'MetronicApp',
                            files: [
                                    'js/controllers/UISelectController.js'
                                    ]
                    }]);
                    }]
                            }
            })

// UI Bootstrap
            .state('uibootstrap', {
            url: "/ui_bootstrap.html",
                    templateUrl: "views/ui_bootstrap.html",
                    data: {pageTitle: 'AngularJS UI Bootstrap'},
                    controller: "GeneralPageController",
                    resolve: {
                    deps: ['$ocLazyLoad', function ($ocLazyLoad) {
                    return $ocLazyLoad.load([{
                    name: 'MetronicApp',
                            files: [
                                    '<?php echo $di->controller_params_array['template']['template_admin_custom_path'] ?>js/controllers/GeneralPageController.js'
                                    ]
                    }]);
                    }]
                            }
            })

// Tree View
            .state('tree', {
            url: "/tree",
                    templateUrl: "views/tree.html",
                    data: {pageTitle: 'jQuery Tree View'},
                    controller: "GeneralPageController",
                    resolve: {
                    deps: ['$ocLazyLoad', function ($ocLazyLoad) {
                    return $ocLazyLoad.load([{
                    name: 'MetronicApp',
                            insertBefore: '#ng_load_plugins_before', // load the above css files before '#ng_load_plugins_before'
                            files: [
                                    '<?php echo $assetspath; ?>global/plugins/jstree/dist/themes/default/style.min.css',
                                    '<?php echo $assetspath; ?>global/plugins/jstree/dist/jstree.min.js',
                                    '<?php echo $assetspath; ?>admin/pages/scripts/ui-tree.js',
                                    '<?php echo $di->controller_params_array['template']['template_admin_custom_path'] ?>js/controllers/GeneralPageController.js'
                                    ]
                    }]);
                    }]
                            }
            })

// Form Tools
            .state('formtools', {
            url: "/form-tools",
                    templateUrl: "views/form_tools.html",
                    data: {pageTitle: 'Form Tools'},
                    controller: "GeneralPageController",
                    resolve: {
                    deps: ['$ocLazyLoad', function ($ocLazyLoad) {
                    return $ocLazyLoad.load([{
                    name: 'MetronicApp',
                            insertBefore: '#ng_load_plugins_before', // load the above css files before '#ng_load_plugins_before'
                            files: [
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-fileinput/bootstrap-fileinput.css',
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-switch/css/bootstrap-switch.min.css',
                                    '<?php echo $assetspath; ?>global/plugins/jquery-tags-input/jquery.tagsinput.css',
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-markdown/css/bootstrap-markdown.min.css',
                                    '<?php echo $assetspath; ?>global/plugins/typeahead/typeahead.css',
                                    '<?php echo $assetspath; ?>global/plugins/fuelux/js/spinner.min.js',
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-fileinput/bootstrap-fileinput.js',
                                    '<?php echo $assetspath; ?>global/plugins/jquery-inputmask/jquery.inputmask.bundle.min.js',
                                    '<?php echo $assetspath; ?>global/plugins/jquery.input-ip-address-control-1.0.min.js',
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-pwstrength/pwstrength-bootstrap.min.js',
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-switch/js/bootstrap-switch.min.js',
                                    '<?php echo $assetspath; ?>global/plugins/jquery-tags-input/jquery.tagsinput.min.js',
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-maxlength/bootstrap-maxlength.min.js',
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-touchspin/bootstrap.touchspin.js',
                                    '<?php echo $assetspath; ?>global/plugins/typeahead/handlebars.min.js',
                                    '<?php echo $assetspath; ?>global/plugins/typeahead/typeahead.bundle.min.js',
                                    '<?php echo $assetspath; ?>admin/pages/scripts/components-form-tools.js',
                                    '<?php echo $di->controller_params_array['template']['template_admin_custom_path'] ?>js/controllers/GeneralPageController.js'
                                    ]
                    }]);
                    }]
                            }
            })

// Date & Time Pickers
            .state('pickers', {
            url: "/pickers",
                    templateUrl: "views/pickers.html",
                    data: {pageTitle: 'Date & Time Pickers'},
                    controller: "GeneralPageController",
                    resolve: {
                    deps: ['$ocLazyLoad', function ($ocLazyLoad) {
                    return $ocLazyLoad.load([{
                    name: 'MetronicApp',
                            insertBefore: '#ng_load_plugins_before', // load the above css files before '#ng_load_plugins_before'
                            files: [
                                    '<?php echo $assetspath; ?>global/plugins/clockface/css/clockface.css',
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-datepicker/css/datepicker3.css',
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-colorpicker/css/colorpicker.css',
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-daterangepicker/daterangepicker-bs3.css',
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.js',
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-timepicker/js/bootstrap-timepicker.min.js',
                                    '<?php echo $assetspath; ?>global/plugins/clockface/js/clockface.js',
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-daterangepicker/moment.min.js',
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-daterangepicker/daterangepicker.js',
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-colorpicker/js/bootstrap-colorpicker.js',
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-datetimepicker/js/bootstrap-datetimepicker.min.js',
                                    '<?php echo $assetspath; ?>admin/pages/scripts/components-pickers.js',
                                    '<?php echo $di->controller_params_array['template']['template_admin_custom_path'] ?>js/controllers/GeneralPageController.js'
                                    ]
                    }]);
                    }]
                            }
            })

// Custom Dropdowns
            .state('dropdowns', {
            url: "/dropdowns",
                    templateUrl: "views/dropdowns.html",
                    data: {pageTitle: 'Custom Dropdowns'},
                    controller: "GeneralPageController",
                    resolve: {
                    deps: ['$ocLazyLoad', function ($ocLazyLoad) {
                    return $ocLazyLoad.load([{
                    name: 'MetronicApp',
                            insertBefore: '#ng_load_plugins_before', // load the above css files before '#ng_load_plugins_before'
                            files: [
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-select/bootstrap-select.min.css',
                                    '<?php echo $assetspath; ?>global/plugins/select2/select2.css',
                                    '<?php echo $assetspath; ?>global/plugins/jquery-multi-select/css/multi-select.css',
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-select/bootstrap-select.min.js',
                                    '<?php echo $assetspath; ?>global/plugins/select2/select2.min.js',
                                    '<?php echo $assetspath; ?>global/plugins/jquery-multi-select/js/jquery.multi-select.js',
                                    '<?php echo $assetspath; ?>admin/pages/scripts/components-dropdowns.js',
                                    '<?php echo $di->controller_params_array['template']['template_admin_custom_path'] ?>js/controllers/GeneralPageController.js'
                                    ]
                    }]);
                    }]
                            }
            })

// Advanced Datatables
            .state('datatablesAdvanced', {
            url: "/datatables/advanced.html",
                    templateUrl: "views/datatables/advanced.html",
                    data: {pageTitle: 'Advanced Datatables'},
                    controller: "GeneralPageController",
                    resolve: {
                    deps: ['$ocLazyLoad', function ($ocLazyLoad) {
                    return $ocLazyLoad.load({
                    name: 'MetronicApp',
                            insertBefore: '#ng_load_plugins_before', // load the above css files before '#ng_load_plugins_before'
                            files: [
                                    '<?php echo $assetspath; ?>global/plugins/select2/select2.css',
                                    '<?php echo $assetspath; ?>global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.css',
                                    '<?php echo $assetspath; ?>global/plugins/datatables/extensions/Scroller/css/dataTables.scroller.min.css',
                                    '<?php echo $assetspath; ?>global/plugins/datatables/extensions/ColReorder/css/dataTables.colReorder.min.css',
                                    '<?php echo $assetspath; ?>global/plugins/select2/select2.min.js',
                                    '<?php echo $assetspath; ?>global/plugins/datatables/all.min.js',
                                    'js/scripts/table-advanced.js',
                                    '<?php echo $di->controller_params_array['template']['template_admin_custom_path'] ?>js/controllers/GeneralPageController.js'
                                    ]
                            });
                    }]
                            }
            })
// Static Translates
            .state('statictranslates', {
            url: "/:lng/inner_home_settings_static_translates.html",
                    templateUrl: function(params){ return '/b2b/' + params.lng + '/admin/dynhelperpage/inner_home_settings_static_translates/'; },
                    data: {pageTitle: 'Application Settings Static Translates'},
                    controller: "GeneralPageController",
                    resolve: {
                    deps: ['$ocLazyLoad', function ($ocLazyLoad) {
                    return $ocLazyLoad.load({
                    name: 'MetronicApp',
                            insertBefore: '#ng_load_plugins_before', // load the above css files before '#ng_load_plugins_before'
                            files: [
<?php
$collectionname = 'cssstatictranslatesinnerpage';
$arr = array(
    0 => array(
        'path' => $assetspath . 'global/plugins/select2/',
        'filename' => 'select2.css'
    ),
    10 => array(
        'path' => $assetspath . 'global/plugins/bootstrap-datepicker/css/',
        'filename' => 'datepicker.css'
    ),
    20 => array(
        'path' => $assetspath . 'global/plugins/datatables/plugins/bootstrap/',
        'filename' => 'dataTables.bootstrap.css'
    ),
);
$cssminify = MyTags::MyCollectionGenerateCustomMinify($arr, $collectionname, 'css', true);
echo $cssminify . ',
                                             ';
//echo '\'/' . $cssminify . '\',
//                                             ';
$collectionname = 'jsstatictranslatesinnerpage';

$arr1 = array(
    10 => array(
        'path' => $assetspath . 'global/plugins/select2/',
        'filename' => 'select2.min.js'
    ),
    20 => array(
        'path' => $assetspath . 'global/plugins/datatables/',
        'filename' => 'all.min.js'
    ),
    30 => array(
        'localurl' => MyCustomHelperPages::makePage(CHCrmCConstantsPages::CONST_PAGES_ADMIN_DYNPAGE_HELPERPAGE_PARAM1, array('helperpage' => 'js-datatable', 'param1' => 'inner_home_settings_tables')),
//'/b2b/' . $di->controller_params_array['lng'] . '/admin/dynhelperpage/js-datatable/inner_home_settings_tables/1.js',
    ),
    40 => array(
        'localurl' => MyCustomHelperPages::makePage(CHCrmCConstantsPages::CONST_PAGES_ADMIN_DYNPAGE_HELPERPAGE_PARAM1, array('helperpage' => $di->controller_params_array['settings']['Js_Table_Ajax_Page'], 'param1' => 'col=3:sort=' . AGCHParams::$Static_Order_Asc . ':pagelength=20:lengthmenukeys=10,20,50,100,150,' . AGCHParams::$Static_Show_All . ':lengthmenuvalues=10,20,50,100,150,"All":pageurl=' . $di->controller_params_array['settings']['Param1_Inner_Home_Settings_Static_Translates_Page'])),
//'/b2b/' . $di->controller_params_array['lng'] . '/admin/dynhelperpage/js-table-ajax/col=3:sort=' . AGCHParams::$Static_Order_Asc . ':pagelength=20:lengthmenukeys=10,20,50,100,150,' . AGCHParams::$Static_Show_All . ':lengthmenuvalues=10,20,50,100,150,"All":pageurl=' . $di->controller_params_array['settings']['Param1_Inner_Home_Settings_Static_Translates_Page'] . '/1.js',
    ),
    50 => array(
        'path' => $di->controller_params_array['template']['template_admin_custom_path'] . 'js/controllers/',
        'filename' => 'GeneralPageController.js'
    ),
);
$jsminify = MyTags::MyCollectionGenerateCustomMinify($arr1, $collectionname, 'js', true);
echo $jsminify;
//echo '\'/' . $jsminify . '\'';
?>
                            ]
                            });
                    }]
                            }
            })





// Sites Mod Articles
<?php
$pageid = B2b\Models\CoreModels\PpB2bAdminVfroutepage::Get_Page_Name('Inner_Home_Sites_Mod_Articles');
$pageidsimple = str_ireplace('_', '', $pageid);
?>
    .state('<?php echo $pageidsimple; ?>', {
    url: "/:lng/<?php echo $pageid; ?>.html",
            templateUrl: function(params){ return <?php echo MyCustomHelperPages::makePageAngular($pageid); ?>; },
            data: {pageTitle: 'Application Settings Static Translates'},
            controller: "GeneralPageController",
            resolve: {
            deps: ['$ocLazyLoad', function ($ocLazyLoad) {
            return $ocLazyLoad.load({
            name: 'MetronicApp',
                    insertBefore: '#ng_load_plugins_before', // load the above css files before '#ng_load_plugins_before'
                    files: [
<?php
$collectionname = 'css' . $pageidsimple;
$arr = array(
    0 => array(
        'path' => $assetspath . 'global/plugins/select2/',
        'filename' => 'select2.css'
    ),
    10 => array(
        'path' => $assetspath . 'global/plugins/bootstrap-datepicker/css/',
        'filename' => 'datepicker.css'
    ),
    20 => array(
        'path' => $assetspath . 'global/plugins/datatables/plugins/bootstrap/',
        'filename' => 'dataTables.bootstrap.css'
    ),
);
$cssminify = MyTags::MyCollectionGenerateCustomMinify($arr, $collectionname, 'css', true);
echo $cssminify . ',
                                             ';
//echo '\'/' . $cssminify . '\',
//                                             ';
$collectionname = 'js' . $pageidsimple;

$arr1 = array(
    10 => array(
        'path' => $assetspath . 'global/plugins/select2/',
        'filename' => 'select2.min.js'
    ),
    20 => array(
        'path' => $assetspath . 'global/plugins/datatables/',
        'filename' => 'all.min.js'
    ),
    30 => array(
        'localurl' => MyCustomHelperPages::makePage(CHCrmCConstantsPages::CONST_PAGES_ADMIN_DYNPAGE_HELPERPAGE_PARAM1, array('helperpage' => 'js-datatable', 'param1' => 'inner_home_settings_tables')),
// '/b2b/' . $di->controller_params_array['lng'] . '/admin/dynhelperpage/js-datatable/inner_home_settings_tables/1.js',
    ),
    40 => array(
        'localurl' => MyCustomHelperPages::makePage(CHCrmCConstantsPages::CONST_PAGES_ADMIN_DYNPAGE_HELPERPAGE_PARAM1, array('helperpage' => $di->controller_params_array['settings']['Js_Table_Ajax_Page'], 'param1' => 'col=3:sort=' . AGCHParams::$Static_Order_Asc . ':pagelength=20:lengthmenukeys=10,20,50,100,150,250,500,' . AGCHParams::$Static_Show_All . ':lengthmenuvalues=10,20,50,100,150,250,500,"All":pageurl=' . $di->controller_params_array['settings']['Param1_Inner_Home_Sites_Mod_Articles_Page'])),
//'/b2b/' . $di->controller_params_array['lng'] . '/admin/dynhelperpage/js-table-ajax/col=3:sort=' . AGCHParams::$Static_Order_Asc . ':pagelength=20:lengthmenukeys=10,20,50,100,150,250,500,' . AGCHParams::$Static_Show_All . ':lengthmenuvalues=10,20,50,100,150,250,500,"All":pageurl=' . $di->controller_params_array['settings']['Param1_Inner_Home_Sites_Mod_Articles_Page'] . '/1.js',
    ),
    50 => array(
        'path' => $di->controller_params_array['template']['template_admin_custom_path'] . 'js/controllers/',
        'filename' => 'GeneralPageController.js'
    ),
);
$jsminify = MyTags::MyCollectionGenerateCustomMinify($arr1, $collectionname, 'js', true);
echo $jsminify;
//echo '\'/' . $jsminify . '\'';
?>
                    ]
                    });
            }]
                    }
    })

// Table Record Edit
<?php
$pageid = 'inner_tbl_record';
$pageidsimple = str_ireplace('_', '', $pageid);
$arrparams = array('lng', 'mode', 'schemaname', 'tblname', 'pkid');
?>
    .state('<?php echo $pageidsimple; ?>', {
    url: "/:lng/--:mode--:schemaname--:tblname--:pkid--<?php echo $pageid; ?>.html",
            templateUrl: function(params){ return <?php echo MyCustomHelperPages::makePageAngular($pageid, $arrparams); ?>; },
            data: {pageTitle: 'Edit Table Record'},
            controller: "GeneralPageController",
            resolve: {
            deps: ['$ocLazyLoad', function ($ocLazyLoad) {
            return $ocLazyLoad.load({
            name: 'MetronicApp',
                    insertBefore: '#ng_load_plugins_before', // load the above css files before '#ng_load_plugins_before'
                    files: [
<?php
$collectionname = 'css' . $pageidsimple;
$arr = array(
    10 => array(
        'path' => $assetspath . 'global/plugins/select2/',
        'filename' => 'select2.css'
    ),
    20 => array(
        'path' => $assetspath . 'global/plugins/bootstrap-wysihtml5/',
        'filename' => 'bootstrap-wysihtml5.css'
    ),
    30 => array(
        'path' => $assetspath . 'global/plugins/bootstrap-datepicker/css/',
        'filename' => 'datepicker.css'
    ),
    40 => array(
        'path' => $assetspath . 'global/plugins/bootstrap-datepicker/css/',
        'filename' => 'bootstrap-timepicker.min.css'
    ),
    50 => array(
        'path' => $assetspath . 'global/plugins/bootstrap-datetimepicker/css/',
        'filename' => 'bootstrap-datetimepicker.min.css'
    ),
    60 => array(
        'path' => $assetspath . 'global/plugins/bootstrap-editable/bootstrap-editable/css/',
        'filename' => 'bootstrap-editable.css'
    ),
    70 => array(
        'path' => $assetspath . 'global/plugins/bootstrap-editable/inputs-ext/address/',
        'filename' => 'address.css'
    ),
);
$cssminify = MyTags::MyCollectionGenerateCustomMinify($arr, $collectionname, 'css', true);
echo $cssminify . ',
                                             ';
//echo '\'/' . $cssminify . '\',
//                                             ';
$collectionname = 'js' . $pageidsimple;

$arr1 = array(
    10 => array(
        'path' => $assetspath . 'global/plugins/select2/',
        'filename' => 'select2.min.js'
    ),
    20 => array(
        'path' => $assetspath . 'global/plugins/bootstrap-wysihtml5/',
        'filename' => 'wysihtml5-0.3.0.js'
    ),
    30 => array(
        'path' => $assetspath . 'global/plugins/bootstrap-wysihtml5/',
        'filename' => 'bootstrap-wysihtml5.js'
    ),
    40 => array(
        'path' => $assetspath . 'global/plugins/bootstrap-datepicker/js/',
        'filename' => 'bootstrap-datepicker.js'
    ),
    50 => array(
        'path' => $assetspath . 'global/plugins/bootstrap-datetimepicker/js/',
        'filename' => 'bootstrap-datetimepicker.min.js'
    ),
    60 => array(
        'path' => $assetspath . 'global/plugins/',
        'filename' => 'moment.min.js'
    ),
    70 => array(
        'path' => $assetspath . 'global/plugins/',
        'filename' => 'jquery.mockjax.js'
    ),
    80 => array(
        'path' => $assetspath . 'global/plugins/bootstrap-editable/bootstrap-editable/js/',
        'filename' => 'bootstrap-editable.js'
    ),
    90 => array(
        'path' => $assetspath . 'global/plugins/bootstrap-editable/inputs-ext/address/',
        'filename' => 'address.js'
    ),
    95 => array(
        'path' => $assetspath . 'global/plugins/bootstrap-editable/inputs-ext/wysihtml5/',
        'filename' => 'wysihtml5.js'
    ),
    99 => array(
        'path' => $di->controller_params_array['template']['template_admin_custom_path'] . 'js/controllers/',
        'filename' => 'GeneralPageController.js'
    ),
);
$jsminify = MyTags::MyCollectionGenerateCustomMinify($arr1, $collectionname, 'js', true);
echo $jsminify;
//echo '\'/' . $jsminify . '\'';
?>
                    ]
                    });
            }]
                    }
    })



// Cftable Datetables
            .state('cftable', {
            url: "/:lng/inner_home_settings_tables.html",
                    templateUrl: function(params){ return '/b2b/' + params.lng + '/admin/dynhelperpage/inner_home_settings_tables/'; },
                    data: {pageTitle: 'Application Database Tables'},
                    controller: "GeneralPageController",
                    resolve: {
                    deps: ['$ocLazyLoad', function ($ocLazyLoad) {
                    return $ocLazyLoad.load({
                    name: 'MetronicApp',
                            insertBefore: '#ng_load_plugins_before', // load the above css files before '#ng_load_plugins_before'
                            files: [
<?php echo '\'/' . $assetspath; ?>global / plugins / select2 / select2.css',
<?php echo '\'/' . $assetspath; ?>global / plugins / bootstrap - datepicker / css / datepicker.css',
<?php echo '\'/' . $assetspath; ?>global / plugins / datatables / plugins / bootstrap / dataTables.bootstrap.css',
<?php echo '\'/' . $assetspath; ?>global / plugins / bootstrap - datepicker / js / bootstrap - datepicker.js',
<?php echo '\'/' . $assetspath; ?>global / plugins / select2 / select2.min.js',
<?php echo '\'/' . $assetspath; ?>global / plugins / datatables / all.min.js',
<?php echo '\'/b2b/' . $di->controller_params_array['lng']; ?> / admin / dynhelperpage / js - datatable / inner_home_settings_tables / 1.js',
<?php echo '\'/b2b/' . $di->controller_params_array['lng']; ?> / admin / dynhelperpage /<?php echo $di->controller_params_array['settings']['Js_Table_Ajax_Page']; ?> / inner_home_settings_tables / 1.js',
<?php echo '\'/' . $di->controller_params_array['template']['template_admin_custom_path']; ?>js / controllers / GeneralPageController.js'
                                    ]
                            });
                    }]
                            }
            })

// Modules Create
            .state('modulecreate', {
            url: "/:lng/--:moduleid--inner_home_settings_modules_edit.html",
                    templateUrl: function(params){ return '/b2b/' + params.lng + '/admin/dynhelperpage/inner_home_settings_modules_edit/' + params.moduleid + '/'; },
                    data: {pageTitle: 'Application Modules Edit'},
                    controller: "GeneralPageController",
                    resolve: {
                    deps: ['$ocLazyLoad', function ($ocLazyLoad) {
                    return $ocLazyLoad.load({
                    name: 'MetronicApp',
                            insertBefore: '#ng_load_plugins_before', // load the above css files before '#ng_load_plugins_before'
                            files: [
<?php
$collectionname = 'jsstaticmodulecreate';
$arr1 = array(
    10 => array(
        'path' => $assetspath . 'global/plugins/jquery-ui/',
        'filename' => 'jquery-ui.min.js'
    ),
    20 => array(
        'path' => $assetspath . 'global/plugins/jquery-ui-touch-punch/',
        'filename' => 'jquery.ui.touch-punch.min.js'
    ),
    30 => array(
        'localurl' => MyCustomHelperPages::makePage(CHCrmCConstantsPages::CONST_PAGES_ADMIN_DYNPAGE_HELPERPAGE, array('helperpage' => 'js-portlet-draggable')),
//'/b2b/' . $di->controller_params_array['lng'] . '/admin/dynhelperpage/js-portlet-draggable/2.js',
    ),
    40 => array(
        'path' => $assetspath . 'global/plugins/jquery-notific8/',
        'filename' => 'jquery.notific8.min.js'
    ),
    50 => array(
        'path' => $assetspath . 'global/plugins/bootstrap-toastr/',
        'filename' => 'toastr.min.js'
    ),
    60 => array(
        'path' => $di->controller_params_array['template']['template_admin_custom_path'] . 'js/controllers/',
        'filename' => 'GeneralPageController.js'
    ),
);
$jsminify = MyTags::MyCollectionGenerateCustomMinify($arr1, $collectionname, 'js', true);
echo $jsminify;
//echo '\'/' . $jsminify . '\'';
?>
                            ]
                            });
                    }]
                            }
            })

// Ajax Datetables
            .state('datatablesAjax', {
            url: "/datatables/ajax.html",
                    templateUrl: "views/datatables/ajax.html",
                    data: {pageTitle: 'Ajax Datatables'},
                    controller: "GeneralPageController",
                    resolve: {
                    deps: ['$ocLazyLoad', function ($ocLazyLoad) {
                    return $ocLazyLoad.load({
                    name: 'MetronicApp',
                            insertBefore: '#ng_load_plugins_before', // load the above css files before '#ng_load_plugins_before'
                            files: [
                                    '<?php echo $assetspath; ?>global/plugins/select2/select2.css',
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-datepicker/css/datepicker.css',
                                    '<?php echo $assetspath; ?>global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.css',
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.js',
                                    '<?php echo $assetspath; ?>global/plugins/select2/select2.min.js',
                                    '<?php echo $assetspath; ?>global/plugins/datatables/all.min.js',
                                    '<?php echo $assetspath; ?>global/scripts/datatable.js',
                                    'js/scripts/table-ajax.js',
                                    '<?php echo $di->controller_params_array['template']['template_admin_custom_path'] ?>js/controllers/GeneralPageController.js'
                                    ]
                            });
                    }]
                            }
            })

// User Profile
            .state("profile", {
            url: "/profile",
                    templateUrl: "views/profile/main.html",
                    data: {pageTitle: 'User Profile'},
                    controller: "UserProfileController",
                    resolve: {
                    deps: ['$ocLazyLoad', function ($ocLazyLoad) {
                    return $ocLazyLoad.load({
                    name: 'MetronicApp',
                            insertBefore: '#ng_load_plugins_before', // load the above css files before '#ng_load_plugins_before'
                            files: [
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-fileinput/bootstrap-fileinput.css',
                                    '<?php echo $assetspath; ?>admin/pages/css/profile.css',
                                    '<?php echo $assetspath; ?>admin/pages/css/tasks.css',
                                    '<?php echo $assetspath; ?>global/plugins/jquery.sparkline.min.js',
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-fileinput/bootstrap-fileinput.js',
                                    '<?php echo $assetspath; ?>admin/pages/scripts/profile.js',
                                    'js/controllers/UserProfileController.js'
                                    ]
                            });
                    }]
                            }
            })

// User Profile Dashboard
            .state("profile.dashboard", {
            url: "/dashboard",
                    templateUrl: "views/profile/dashboard.html",
                    data: {pageTitle: 'User Profile'}
            })

// User Profile Account
            .state("profile.account", {
            url: "/account",
                    templateUrl: "views/profile/account.html",
                    data: {pageTitle: 'User Account'}
            })

// User Profile Help
            .state("profile.help", {
            url: "/help",
                    templateUrl: "views/profile/help.html",
                    data: {pageTitle: 'User Help'}
            })

// Todo
            .state('todo', {
            url: "/todo",
                    templateUrl: "views/todo.html",
                    data: {pageTitle: 'Todo'},
                    controller: "TodoController",
                    resolve: {
                    deps: ['$ocLazyLoad', function ($ocLazyLoad) {
                    return $ocLazyLoad.load({
                    name: 'MetronicApp',
                            insertBefore: '#ng_load_plugins_before', // load the above css files before '#ng_load_plugins_before'
                            files: [
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-datepicker/css/datepicker3.css',
                                    '<?php echo $assetspath; ?>global/plugins/select2/select2.css',
                                    '<?php echo $assetspath; ?>admin/pages/css/todo.css',
                                    '<?php echo $assetspath; ?>global/plugins/bootstrap-datepicker/js/bootstrap-datepicker.js',
                                    '<?php echo $assetspath; ?>global/plugins/select2/select2.min.js',
                                    '<?php echo $assetspath; ?>admin/pages/scripts/todo.js',
                                    'js/controllers/TodoController.js'
                                    ]
                            });
                    }]
                            }
            })

    }]);
    /* Init global settings and run the app */
    MetronicApp.run(["$rootScope", "settings", "$state", function ($rootScope, settings, $state) {
    $rootScope.$state = $state; // state to be accessed from view
    }]);
//</script>